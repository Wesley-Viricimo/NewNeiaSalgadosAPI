
generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["sales"]
}

model User {
  idUser    Int             @default(autoincrement()) @id
  name      String 
  surname   String
  cpf       String          @unique() @db.VarChar(11)
  phone     String
  email     String          @unique()
  role      String          @default("CLIENTE")
  isActive  Boolean         @default(true)
  password  String
  address   Address[]
  order     Order[]
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt 

  @@schema("sales")
}

model Address {
  idAddress   Int           @default(autoincrement()) @id
  cep         String
  state       String
  city        String
  district    String 
  road        String
  number      String
  complement  String?
  idUser      Int
  user        User          @relation(fields: [idUser], references: [idUser], onDelete: Cascade, onUpdate: Cascade)
  order       Order[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@schema("sales")
}

model Product {
  idProduct   Int           @default(autoincrement()) @id
  description String        @unique()
  price       Float     
  urlImage    String?
  orderItem   OrderItem[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@schema("sales")
}

model Order {
  idOrder               Int       @default(autoincrement()) @id
  idAddress             Int
  idUser                Int
  orderStatus           String
  paymentMethod         String
  typeOfDelivery        String
  total                 Float
  isPending             Boolean   @default(true)
  user                  User      @relation(fields: [idUser], references: [idUser], onDelete: Cascade, onUpdate: Cascade)
  address               Address   @relation(fields: [idAddress], references: [idAddress], onDelete: Cascade, onUpdate: Cascade)
  orderItens            OrderItem[]
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  orderStatusUpdatedAt  DateTime?

  @@schema("sales")
}

model OrderItem {
  idOrderItem     Int       @default(autoincrement()) @id
  idProduct       Int
  idOrder         Int
  quantity        Int
  order           Order     @relation(fields: [idOrder], references: [idOrder], onDelete: Cascade, onUpdate: Cascade)
  product         Product   @relation(fields: [idProduct], references: [idProduct], onDelete: NoAction, onUpdate: Cascade)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@schema("sales")
}


